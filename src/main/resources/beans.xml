<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--加载数据库配置-->
    <context:property-placeholder location="classpath:db.properties"/>

    <!--开启注解 自动扫描-->
    <context:component-scan base-package="com.galaxy"/>
    <!--配置数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${driverClassName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username1}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!--配置sqlSessionFactory,加载mybatis的核心配置文件-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:SqlMapConfig.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置事务管理对象  引入数据源   切面-->
    <bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--Mapper代理方式来实现dao，扫描包的方式来配置代理-->
    <bean id="config" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.galaxy.dao"/>
    </bean>

    <!--注解 -->
    <!--<tx:annotation-driven transaction-manager="tx"/>-->


    <!--配置事务的策略   通知-->
    <tx:advice id="txAdvice" transaction-manager="tx">
        <tx:attributes>
            <!--REQUIRED 存在且符合 就使用-->
            <tx:method name="insert*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="add*" propagation="REQUIRED"/>
            <!--SUPPORTS如果存在就用，没有就不用-->
            <tx:method name="select*" propagation="SUPPORTS"/>
            <tx:method name="find*" propagation="SUPPORTS"/>
            <tx:method name="query*" propagation="SUPPORTS"/>
            <!--read-only="true 只读 不放里写-->
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

    <!--配置AOP   切面-->
    <aop:config>
        <aop:pointcut id="aopPointcut" expression="
            execution(* com.galaxy.dao.impl.*.insert*(..))
            ||execution(* com.galaxy.dao.impl.*.update*(..))
            ||execution(* com.galaxy.dao.impl.*.delete*(..))
            ||execution(* com.galaxy.dao.impl.*.add*(..))"/>
        <!--将 通知 和 切面 关联起来-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="aopPointcut"/>
    </aop:config>
</beans>